package jetbrains.mps.vclang.behavior;

/*Generated by MPS */

import com.jetbrains.jetpad.vclang.term.Abstract;
import org.jetbrains.mps.openapi.model.SNode;
import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.internal.collections.runtime.ISelector;
import jetbrains.mps.smodel.behaviour.BehaviorReflection;
import com.jetbrains.jetpad.vclang.term.expr.visitor.AbstractExpressionVisitor;

public class LambdaExpressionAdapter extends ExpressionAdapter implements Abstract.LamExpression {
  private SNode thisNode;
  public LambdaExpressionAdapter(SNode t) {
    thisNode = t;
  }
  public List<? extends Abstract.Argument> getArguments() {
    return ListSequence.fromList(SLinkOperations.getChildren(thisNode, MetaAdapterFactory.getContainmentLink(0x2db233bb72db49c3L, 0xadc47ae97f87f8dcL, 0xc23f5510097501bL, 0xc23f5510097501cL, "args"))).select(new ISelector<SNode, Abstract.Argument>() {
      public Abstract.Argument select(SNode it) {
        return BehaviorReflection.invokeVirtual(Abstract.Argument.class, it, "virtual_toSourceArgument_7330199235213968318", new Object[]{});
      }
    }).toListSequence();
  }
  public Abstract.Expression getBody() {
    return BehaviorReflection.invokeVirtual(Abstract.Expression.class, SLinkOperations.getTarget(thisNode, MetaAdapterFactory.getContainmentLink(0x2db233bb72db49c3L, 0xadc47ae97f87f8dcL, 0x62a6e9940367a284L, 0x634b3353f5ace157L, "body")), "virtual_toSourceExpression_7330199235213689458", new Object[]{});
  }
  public <P, R> R accept(AbstractExpressionVisitor<? super P, ? extends R> visitor, P params) {
    return visitor.visitLam(this, params);
  }
}
