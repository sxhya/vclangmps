package jetbrains.mps.vclang.behavior;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import java.util.List;
import jetbrains.mps.smodel.behaviour.BehaviorReflection;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.internal.collections.runtime.Sequence;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.internal.collections.runtime.ListSequence;

public class Sheet_Behavior {
  public static void init(SNode thisNode) {
  }
  public static List<SNode> virtual_appendToScope_1644105782651590016(SNode thisNode, SNode requestSender, AbstractScopeRequestDescriptor descriptor) {
    List<SNode> result = BehaviorReflection.invokeSuper((Class<List<SNode>>) ((Class) Object.class), thisNode, "jetbrains.mps.vclang.structure.BaseVcConcept", "virtual_appendToScope_1644105782651590016", new Object[]{requestSender, descriptor});
    if (descriptor instanceof FunctorScopeRequestDescriptor && SNodeOperations.getParent(requestSender) == thisNode) {
      FunctorScopeRequestDescriptor desc = (FunctorScopeRequestDescriptor) descriptor;
      List<SNode> prevDefs = Sequence.fromIterable(SNodeOperations.ofConcept(SNodeOperations.getPrevSiblings(requestSender, false), MetaAdapterFactory.getConcept(0x2db233bb72db49c3L, 0xadc47ae97f87f8dcL, 0xfc408c778ec7ec8L, "jetbrains.mps.vclang.structure.Definition"))).toListSequence();
      for (SNode d : ListSequence.fromList(prevDefs)) {
        ListSequence.fromList(result).addSequence(ListSequence.fromList(BehaviorReflection.invokeVirtual((Class<List<SNode>>) ((Class) Object.class), d, "virtual_appendToScope_1644105782651590016", new Object[]{thisNode, desc})));
      }
    }
    return result;
  }
}
