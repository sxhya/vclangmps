package jetbrains.mps.vclang.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBehaviorAspectDescriptor;
import jetbrains.mps.core.aspects.behaviour.api.BHDescriptor;
import jetbrains.mps.smodel.runtime.BehaviorDescriptor;
import jetbrains.mps.smodel.runtime.interpreted.BehaviorAspectInterpreted;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.Arrays;

public final class BehaviorAspectDescriptor extends BaseBehaviorAspectDescriptor {
  private final BHDescriptor myHasArguments__BehaviorDescriptor = new HasArguments__BehaviorDescriptor();
  private final BHDescriptor myExpression__BehaviorDescriptor = new Expression__BehaviorDescriptor();
  private final BHDescriptor myIValidIdentifier__BehaviorDescriptor = new IValidIdentifier__BehaviorDescriptor();
  private final BHDescriptor myIValidFunctionalSymbol__BehaviorDescriptor = new IValidFunctionalSymbol__BehaviorDescriptor();
  private final BHDescriptor myClassDefinition__BehaviorDescriptor = new ClassDefinition__BehaviorDescriptor();
  private final BHDescriptor myDefinition__BehaviorDescriptor = new Definition__BehaviorDescriptor();
  private final BHDescriptor myConstructorWithPatterns__BehaviorDescriptor = new ConstructorWithPatterns__BehaviorDescriptor();
  private final BHDescriptor myNewExpression__BehaviorDescriptor = new NewExpression__BehaviorDescriptor();
  private final BHDescriptor myPatternAny__BehaviorDescriptor = new PatternAny__BehaviorDescriptor();
  private final BHDescriptor myPatternId__BehaviorDescriptor = new PatternId__BehaviorDescriptor();
  private final BHDescriptor myPatternConstructor__BehaviorDescriptor = new PatternConstructor__BehaviorDescriptor();
  private final BHDescriptor myAbstractPattern__BehaviorDescriptor = new AbstractPattern__BehaviorDescriptor();
  private final BHDescriptor myBaseVcConcept__BehaviorDescriptor = new BaseVcConcept__BehaviorDescriptor();
  private final BHDescriptor myIVcConcept__BehaviorDescriptor = new IVcConcept__BehaviorDescriptor();
  private final BHDescriptor myAbstractScopeCommand__BehaviorDescriptor = new AbstractScopeCommand__BehaviorDescriptor();
  private final BHDescriptor myIClassMember__BehaviorDescriptor = new IClassMember__BehaviorDescriptor();
  private final BHDescriptor myVcLangNamespace__BehaviorDescriptor = new VcLangNamespace__BehaviorDescriptor();
  private final BHDescriptor myDefExpression__BehaviorDescriptor = new DefExpression__BehaviorDescriptor();
  private final BHDescriptor myLetExpression__BehaviorDescriptor = new LetExpression__BehaviorDescriptor();
  private final BHDescriptor myLetClause__BehaviorDescriptor = new LetClause__BehaviorDescriptor();
  private final BHDescriptor myOverrideModifier__BehaviorDescriptor = new OverrideModifier__BehaviorDescriptor();
  private final BHDescriptor myRefExpression__BehaviorDescriptor = new RefExpression__BehaviorDescriptor();
  private final BHDescriptor myTypedArgument__BehaviorDescriptor = new TypedArgument__BehaviorDescriptor();
  private final BHDescriptor myDotExpression__BehaviorDescriptor = new DotExpression__BehaviorDescriptor();
  private final BHDescriptor myAbstractDotOperation__BehaviorDescriptor = new AbstractDotOperation__BehaviorDescriptor();
  private final BHDescriptor myStaticFieldAccessOperation__BehaviorDescriptor = new StaticFieldAccessOperation__BehaviorDescriptor();
  private final BHDescriptor myPatternParenthesis__BehaviorDescriptor = new PatternParenthesis__BehaviorDescriptor();
  private final BHDescriptor myParenthesizedExpression__BehaviorDescriptor = new ParenthesizedExpression__BehaviorDescriptor();
  private final BHDescriptor myElimExpression__BehaviorDescriptor = new ElimExpression__BehaviorDescriptor();
  private final BHDescriptor myAbstractExpression__BehaviorDescriptor = new AbstractExpression__BehaviorDescriptor();
  private final BHDescriptor myAbstractBinOpExpression__BehaviorDescriptor = new AbstractBinOpExpression__BehaviorDescriptor();
  private final BHDescriptor myPiExpression__BehaviorDescriptor = new PiExpression__BehaviorDescriptor();
  private final BHDescriptor mySigmaExpression__BehaviorDescriptor = new SigmaExpression__BehaviorDescriptor();
  private final BHDescriptor myLambdaExpression__BehaviorDescriptor = new LambdaExpression__BehaviorDescriptor();
  private final BHDescriptor myApplicationExpression__BehaviorDescriptor = new ApplicationExpression__BehaviorDescriptor();
  private final BHDescriptor myVariableExpression__BehaviorDescriptor = new VariableExpression__BehaviorDescriptor();
  private final BHDescriptor myTupleExpression__BehaviorDescriptor = new TupleExpression__BehaviorDescriptor();
  private final BHDescriptor myTelescopeArgument__BehaviorDescriptor = new TelescopeArgument__BehaviorDescriptor();
  private final BHDescriptor myVariable__BehaviorDescriptor = new Variable__BehaviorDescriptor();
  private final BHDescriptor myAbstractArgument__BehaviorDescriptor = new AbstractArgument__BehaviorDescriptor();
  private final BHDescriptor myITypedArgument__BehaviorDescriptor = new ITypedArgument__BehaviorDescriptor();
  private final BHDescriptor myAbstractClause__BehaviorDescriptor = new AbstractClause__BehaviorDescriptor();
  private final BHDescriptor myClause__BehaviorDescriptor = new Clause__BehaviorDescriptor();
  private final BHDescriptor myArrowExpression__BehaviorDescriptor = new ArrowExpression__BehaviorDescriptor();
  private final BHDescriptor myLeveledUniverse__BehaviorDescriptor = new LeveledUniverse__BehaviorDescriptor();
  private final BHDescriptor myTypeUniverse__BehaviorDescriptor = new TypeUniverse__BehaviorDescriptor();
  private final BHDescriptor myTruncatedTypeUniverse__BehaviorDescriptor = new TruncatedTypeUniverse__BehaviorDescriptor();
  private final BHDescriptor myPropUniverse__BehaviorDescriptor = new PropUniverse__BehaviorDescriptor();
  private final BHDescriptor mySetUniverse__BehaviorDescriptor = new SetUniverse__BehaviorDescriptor();
  private final BHDescriptor myDefFunction__BehaviorDescriptor = new DefFunction__BehaviorDescriptor();
  private final BHDescriptor myPrecedence__BehaviorDescriptor = new Precedence__BehaviorDescriptor();
  private final BHDescriptor myDefType__BehaviorDescriptor = new DefType__BehaviorDescriptor();
  private final BHDescriptor myAbstractConstructor__BehaviorDescriptor = new AbstractConstructor__BehaviorDescriptor();
  private final BHDescriptor myConstructor__BehaviorDescriptor = new Constructor__BehaviorDescriptor();
  private final BHDescriptor myBinOpExpression__BehaviorDescriptor = new BinOpExpression__BehaviorDescriptor();
  private final BHDescriptor myNumeral___BehaviorDescriptor = new Numeral___BehaviorDescriptor();
  private final BHDescriptor myBracketExpression__BehaviorDescriptor = new BracketExpression__BehaviorDescriptor();
  private final BHDescriptor myStaticModifier__BehaviorDescriptor = new StaticModifier__BehaviorDescriptor();

  private final long[] myConceptBehaviorIds;

  public BehaviorAspectDescriptor() {
    myConceptBehaviorIds = new long[58];
    myConceptBehaviorIds[0] = 0xc23f5510097501bL;
    myConceptBehaviorIds[1] = 0xc23f55100976f5cL;
    myConceptBehaviorIds[2] = 0xc23f551009b1df8L;
    myConceptBehaviorIds[3] = 0xc23f551009b1e0dL;
    myConceptBehaviorIds[4] = 0xfc408c778ec305aL;
    myConceptBehaviorIds[5] = 0xfc408c778ec7ec8L;
    myConceptBehaviorIds[6] = 0x1119e4631f266669L;
    myConceptBehaviorIds[7] = 0x134a75c14102d4e1L;
    myConceptBehaviorIds[8] = 0x134a75c1410d5ad0L;
    myConceptBehaviorIds[9] = 0x134a75c1410d5ad1L;
    myConceptBehaviorIds[10] = 0x134a75c1410d5ad4L;
    myConceptBehaviorIds[11] = 0x13b91a232b9e7fd0L;
    myConceptBehaviorIds[12] = 0x16d1097f9c1c95c8L;
    myConceptBehaviorIds[13] = 0x16d1097f9c1d0c09L;
    myConceptBehaviorIds[14] = 0x37ebde1aa3d4fe7fL;
    myConceptBehaviorIds[15] = 0x37ebde1aa3d5f034L;
    myConceptBehaviorIds[16] = 0x380d6d7bb00e7ce0L;
    myConceptBehaviorIds[17] = 0x40feb6e2a72ce3afL;
    myConceptBehaviorIds[18] = 0x4e9ce656c7c3f7ccL;
    myConceptBehaviorIds[19] = 0x4e9ce656c7c3f7ceL;
    myConceptBehaviorIds[20] = 0x5b62464c93378462L;
    myConceptBehaviorIds[21] = 0x5c7035a38c5ef32eL;
    myConceptBehaviorIds[22] = 0x5cf68b0abfa42c58L;
    myConceptBehaviorIds[23] = 0x6168f46017301b6eL;
    myConceptBehaviorIds[24] = 0x6168f46017301b77L;
    myConceptBehaviorIds[25] = 0x6168f46017309911L;
    myConceptBehaviorIds[26] = 0x61f824a8086f83a9L;
    myConceptBehaviorIds[27] = 0x61f824a8086fa9f4L;
    myConceptBehaviorIds[28] = 0x62a6e9940366eec3L;
    myConceptBehaviorIds[29] = 0x62a6e9940366eef7L;
    myConceptBehaviorIds[30] = 0x62a6e9940367a261L;
    myConceptBehaviorIds[31] = 0x62a6e9940367a264L;
    myConceptBehaviorIds[32] = 0x62a6e9940367a26dL;
    myConceptBehaviorIds[33] = 0x62a6e9940367a284L;
    myConceptBehaviorIds[34] = 0x62a6e9940367a64eL;
    myConceptBehaviorIds[35] = 0x62a6e9940367a651L;
    myConceptBehaviorIds[36] = 0x62a6e9940367a654L;
    myConceptBehaviorIds[37] = 0x62a6e9940367a6c1L;
    myConceptBehaviorIds[38] = 0x62a6e9940367a6e4L;
    myConceptBehaviorIds[39] = 0x634b3353f5ace1e6L;
    myConceptBehaviorIds[40] = 0x634b3353f5ace245L;
    myConceptBehaviorIds[41] = 0x634b3353f5aea13cL;
    myConceptBehaviorIds[42] = 0x634b3353f5af0aceL;
    myConceptBehaviorIds[43] = 0x634b3353f5af0f5fL;
    myConceptBehaviorIds[44] = 0x634b3353f5af0fa6L;
    myConceptBehaviorIds[45] = 0x634b3353f5af0fa9L;
    myConceptBehaviorIds[46] = 0x634b3353f5af0ff1L;
    myConceptBehaviorIds[47] = 0x634b3353f5af1159L;
    myConceptBehaviorIds[48] = 0x634b3353f5af115aL;
    myConceptBehaviorIds[49] = 0x634b3353f5af13eaL;
    myConceptBehaviorIds[50] = 0x634b3353f5af14cfL;
    myConceptBehaviorIds[51] = 0x75cfba109e2e5fe5L;
    myConceptBehaviorIds[52] = 0x75cfba109e2ee299L;
    myConceptBehaviorIds[53] = 0x75cfba109e2ee29aL;
    myConceptBehaviorIds[54] = 0x75cfba109e316d2cL;
    myConceptBehaviorIds[55] = 0x75cfba109e316ee9L;
    myConceptBehaviorIds[56] = 0x75cfba109e31841fL;
    myConceptBehaviorIds[57] = 0x7b3886e81fa1cdbeL;
  }

  @Deprecated
  @Override
  public BehaviorDescriptor getDescriptor(String fqName) {
    return BehaviorAspectInterpreted.getInstance().getDescriptor(fqName);
  }

  @Nullable
  @Override
  public BHDescriptor getDescriptor(@NotNull SConceptId conceptId) {
    int behaviorIndex = Arrays.binarySearch(myConceptBehaviorIds, conceptId.getIdValue());
    switch (behaviorIndex) {
      case 0:
        return myHasArguments__BehaviorDescriptor;
      case 1:
        return myExpression__BehaviorDescriptor;
      case 2:
        return myIValidIdentifier__BehaviorDescriptor;
      case 3:
        return myIValidFunctionalSymbol__BehaviorDescriptor;
      case 4:
        return myClassDefinition__BehaviorDescriptor;
      case 5:
        return myDefinition__BehaviorDescriptor;
      case 6:
        return myConstructorWithPatterns__BehaviorDescriptor;
      case 7:
        return myNewExpression__BehaviorDescriptor;
      case 8:
        return myPatternAny__BehaviorDescriptor;
      case 9:
        return myPatternId__BehaviorDescriptor;
      case 10:
        return myPatternConstructor__BehaviorDescriptor;
      case 11:
        return myAbstractPattern__BehaviorDescriptor;
      case 12:
        return myBaseVcConcept__BehaviorDescriptor;
      case 13:
        return myIVcConcept__BehaviorDescriptor;
      case 14:
        return myAbstractScopeCommand__BehaviorDescriptor;
      case 15:
        return myIClassMember__BehaviorDescriptor;
      case 16:
        return myVcLangNamespace__BehaviorDescriptor;
      case 17:
        return myDefExpression__BehaviorDescriptor;
      case 18:
        return myLetExpression__BehaviorDescriptor;
      case 19:
        return myLetClause__BehaviorDescriptor;
      case 20:
        return myOverrideModifier__BehaviorDescriptor;
      case 21:
        return myRefExpression__BehaviorDescriptor;
      case 22:
        return myTypedArgument__BehaviorDescriptor;
      case 23:
        return myDotExpression__BehaviorDescriptor;
      case 24:
        return myAbstractDotOperation__BehaviorDescriptor;
      case 25:
        return myStaticFieldAccessOperation__BehaviorDescriptor;
      case 26:
        return myPatternParenthesis__BehaviorDescriptor;
      case 27:
        return myParenthesizedExpression__BehaviorDescriptor;
      case 28:
        return myElimExpression__BehaviorDescriptor;
      case 29:
        return myAbstractExpression__BehaviorDescriptor;
      case 30:
        return myAbstractBinOpExpression__BehaviorDescriptor;
      case 31:
        return myPiExpression__BehaviorDescriptor;
      case 32:
        return mySigmaExpression__BehaviorDescriptor;
      case 33:
        return myLambdaExpression__BehaviorDescriptor;
      case 34:
        return myApplicationExpression__BehaviorDescriptor;
      case 35:
        return myVariableExpression__BehaviorDescriptor;
      case 36:
        return myTupleExpression__BehaviorDescriptor;
      case 37:
        return myTelescopeArgument__BehaviorDescriptor;
      case 38:
        return myVariable__BehaviorDescriptor;
      case 39:
        return myAbstractArgument__BehaviorDescriptor;
      case 40:
        return myITypedArgument__BehaviorDescriptor;
      case 41:
        return myAbstractClause__BehaviorDescriptor;
      case 42:
        return myClause__BehaviorDescriptor;
      case 43:
        return myArrowExpression__BehaviorDescriptor;
      case 44:
        return myLeveledUniverse__BehaviorDescriptor;
      case 45:
        return myTypeUniverse__BehaviorDescriptor;
      case 46:
        return myTruncatedTypeUniverse__BehaviorDescriptor;
      case 47:
        return myPropUniverse__BehaviorDescriptor;
      case 48:
        return mySetUniverse__BehaviorDescriptor;
      case 49:
        return myDefFunction__BehaviorDescriptor;
      case 50:
        return myPrecedence__BehaviorDescriptor;
      case 51:
        return myDefType__BehaviorDescriptor;
      case 52:
        return myAbstractConstructor__BehaviorDescriptor;
      case 53:
        return myConstructor__BehaviorDescriptor;
      case 54:
        return myBinOpExpression__BehaviorDescriptor;
      case 55:
        return myNumeral___BehaviorDescriptor;
      case 56:
        return myBracketExpression__BehaviorDescriptor;
      case 57:
        return myStaticModifier__BehaviorDescriptor;
      default:
        return null;
    }
  }
}
