package jetbrains.mps.vclang.behavior;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.smodel.behaviour.BehaviorReflection;

public class Constructor_Behavior {
  public static void init(SNode thisNode) {
  }
  public static void virtual_addFunctionalSymbolToScope_2351979189869651664(SNode thisNode, List<SNode> result, FunctorScopeRequestDescriptor desc) {
    if (!(desc.getIsInfix()) || ListSequence.fromList(BehaviorReflection.invokeVirtual((Class<List<SNode>>) ((Class) Object.class), thisNode, "virtual_getExplicitArguments_7364609393484886616", new Object[]{})).count() >= 2) {
      ListSequence.fromList(result).addElement(thisNode);
    }
  }
}
