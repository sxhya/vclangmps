package jetbrains.mps.vclang.behavior;

/*Generated by MPS */

import com.jetbrains.jetpad.vclang.term.Abstract;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.internal.collections.runtime.ISelector;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import com.jetbrains.jetpad.vclang.term.expr.arg.Utils;

public class ClauseAdapter implements Abstract.Clause {
  private SNode thisNode;

  public ClauseAdapter(SNode t) {
    thisNode = t;
    AdapterUtils.rememberAdapter(thisNode, this);
  }

  public Abstract.Definition.Arrow getArrow() {
    return AdapterUtils.convertArrow(SPropertyOperations.getInteger_def(thisNode, MetaAdapterFactory.getProperty(0x2db233bb72db49c3L, 0xadc47ae97f87f8dcL, 0x634b3353f5af0aceL, 0x634b3353f5af0b0aL, "arrow"), "0"));
  }
  public Abstract.Expression getExpression() {
    return AbstractExpression_BehaviorDescriptor.toSourceExpression_id6mU6lSbK89M.invoke(SLinkOperations.getTarget(thisNode, MetaAdapterFactory.getContainmentLink(0x2db233bb72db49c3L, 0xadc47ae97f87f8dcL, 0x634b3353f5af0aceL, 0x634b3353f5af0b47L, "clauseExpression")));
  }
  public void replacePatternWithConstructor(int i) {
    // TODO: Do nothing 
  }
  public List<? extends Abstract.Pattern> getPatterns() {
    return ListSequence.fromList(SLinkOperations.getChildren(thisNode, MetaAdapterFactory.getContainmentLink(0x2db233bb72db49c3L, 0xadc47ae97f87f8dcL, 0x634b3353f5af0aceL, 0x5dac490c31280286L, "patterns"))).select(new ISelector<SNode, Abstract.Pattern>() {
      public Abstract.Pattern select(SNode it) {
        return AbstractPattern_BehaviorDescriptor.toSourcePattern_id1dats513mDi.invoke(it);
      }
    }).toListSequence();
  }
  public void prettyPrint(StringBuilder builder, List<String> names, byte prec) {
    if (SNodeOperations.isInstanceOf(SNodeOperations.getParent(thisNode), MetaAdapterFactory.getConcept(0x2db233bb72db49c3L, 0xadc47ae97f87f8dcL, 0x62a6e9940366eec3L, "jetbrains.mps.vclang.structure.ElimExpression"))) {
      SNode elim = SNodeOperations.cast(SNodeOperations.getParent(thisNode), MetaAdapterFactory.getConcept(0x2db233bb72db49c3L, 0xadc47ae97f87f8dcL, 0x62a6e9940366eec3L, "jetbrains.mps.vclang.structure.ElimExpression"));
      Utils.prettyPrintClause((Abstract.ElimExpression) AbstractExpression_BehaviorDescriptor.toSourceExpression_id6mU6lSbK89M.invoke(elim), this, builder, names, 0);
    }
  }

}
