package jetbrains.mps.vclang.behavior;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import java.util.List;
import jetbrains.mps.smodel.behaviour.BehaviorReflection;

public class AbstractConstructor_Behavior {
  public static void init(SNode thisNode) {
  }
  public static List<SNode> virtual_appendToScope_1644105782651590016(SNode thisNode, SNode requestSender, AbstractScopeRequestDescriptor descriptor) {
    List<SNode> result = BehaviorReflection.invokeSuper((Class<List<SNode>>) ((Class) Object.class), thisNode, "jetbrains.mps.vclang.structure.HasArguments", "virtual_appendToScope_1644105782651590016", new Object[]{requestSender, descriptor});
    if (descriptor instanceof FunctorScopeRequestDescriptor) {
      FunctorScopeRequestDescriptor desc = (FunctorScopeRequestDescriptor) descriptor;
      BehaviorReflection.invokeVirtual(Void.class, thisNode, "virtual_addFunctionalSymbolToScope_2351979189869651664", new Object[]{result, desc});
    }
    return result;
  }
}
