package jetbrains.mps.vclang.behavior;

/*Generated by MPS */

import com.jetbrains.jetpad.vclang.term.Abstract;
import org.jetbrains.mps.openapi.model.SNode;
import java.util.List;
import jetbrains.mps.smodel.behaviour.BehaviorReflection;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import com.jetbrains.jetpad.vclang.term.expr.arg.Utils;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.ArrayList;
import com.jetbrains.jetpad.vclang.term.expr.visitor.AbstractExpressionVisitor;

public class ArrowExpressionAdapter extends ExpressionAdapter implements Abstract.PiExpression {
  private final SNode thisNode;
  public ArrowExpressionAdapter(SNode t) {
    thisNode = t;
  }
  public List<? extends Abstract.TypeArgument> getArguments() {
    Abstract.TypeArgument arg = new Abstract.TypeArgument() {
      public Abstract.Expression getType() {
        return BehaviorReflection.invokeVirtual(Abstract.Expression.class, SLinkOperations.getTarget(thisNode, MetaAdapterFactory.getContainmentLink(0x2db233bb72db49c3L, 0xadc47ae97f87f8dcL, 0x62a6e9940367a261L, 0x75cfba109e316b68L, "leftArg")), "virtual_toSourceExpression_7330199235213689458", new Object[]{});
      }
      public void prettyPrint(StringBuilder builder, List<String> list, byte b) {
        Utils.prettyPrintArgument(this, builder, list, b, 0);
      }
      public boolean getExplicit() {
        return false;
      }
    };
    return ListSequence.fromListAndArray(new ArrayList<Abstract.TypeArgument>(), arg);
  }
  public Abstract.Expression getCodomain() {
    return BehaviorReflection.invokeVirtual(Abstract.Expression.class, SLinkOperations.getTarget(thisNode, MetaAdapterFactory.getContainmentLink(0x2db233bb72db49c3L, 0xadc47ae97f87f8dcL, 0x62a6e9940367a261L, 0x75cfba109e316b6aL, "rightArg")), "virtual_toSourceExpression_7330199235213689458", new Object[]{});
  }
  public <P, R> R accept(AbstractExpressionVisitor<? super P, ? extends R> visitor, P params) {
    return visitor.visitPi(this, params);
  }
}
