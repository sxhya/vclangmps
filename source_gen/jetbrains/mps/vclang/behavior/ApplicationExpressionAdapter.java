package jetbrains.mps.vclang.behavior;

/*Generated by MPS */

import com.jetbrains.jetpad.vclang.term.Abstract;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.smodel.behaviour.BehaviorReflection;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import com.jetbrains.jetpad.vclang.term.expr.visitor.AbstractExpressionVisitor;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import java.util.List;

public class ApplicationExpressionAdapter extends ExpressionAdapter implements Abstract.AppExpression {
  private SNode thisNode;
  public ApplicationExpressionAdapter(SNode t) {
    thisNode = t;
  }
  public Abstract.Expression getFunction() {
    return BehaviorReflection.invokeVirtual(Abstract.Expression.class, SLinkOperations.getTarget(thisNode, MetaAdapterFactory.getContainmentLink(0x2db233bb72db49c3L, 0xadc47ae97f87f8dcL, 0x62a6e9940367a261L, 0x75cfba109e316b68L, "leftArg")), "virtual_toSourceExpression_7330199235213689458", new Object[]{});
  }
  public <P, R> R accept(AbstractExpressionVisitor<? super P, ? extends R> visitor, P params) {
    return visitor.visitApp(this, params);
  }
  public Abstract.ArgumentExpression getArgument() {
    return new Abstract.ArgumentExpression() {
      public Abstract.Expression getExpression() {
        if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(thisNode, MetaAdapterFactory.getContainmentLink(0x2db233bb72db49c3L, 0xadc47ae97f87f8dcL, 0x62a6e9940367a261L, 0x75cfba109e316b6aL, "rightArg")), MetaAdapterFactory.getConcept(0x2db233bb72db49c3L, 0xadc47ae97f87f8dcL, 0x5cf68b0abfab6115L, "jetbrains.mps.vclang.structure.ImplicitArgument"))) {
          return BehaviorReflection.invokeVirtual(Abstract.Expression.class, SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(thisNode, MetaAdapterFactory.getContainmentLink(0x2db233bb72db49c3L, 0xadc47ae97f87f8dcL, 0x62a6e9940367a261L, 0x75cfba109e316b6aL, "rightArg")), MetaAdapterFactory.getConcept(0x2db233bb72db49c3L, 0xadc47ae97f87f8dcL, 0x5cf68b0abfab6115L, "jetbrains.mps.vclang.structure.ImplicitArgument")), MetaAdapterFactory.getContainmentLink(0x2db233bb72db49c3L, 0xadc47ae97f87f8dcL, 0x75cfba109e31841fL, 0x75cfba109e31843eL, "expression")), "virtual_toSourceExpression_7330199235213689458", new Object[]{});
        }
        return BehaviorReflection.invokeVirtual(Abstract.Expression.class, SLinkOperations.getTarget(thisNode, MetaAdapterFactory.getContainmentLink(0x2db233bb72db49c3L, 0xadc47ae97f87f8dcL, 0x62a6e9940367a261L, 0x75cfba109e316b6aL, "rightArg")), "virtual_toSourceExpression_7330199235213689458", new Object[]{});
      }
      public boolean isExplicit() {
        if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(thisNode, MetaAdapterFactory.getContainmentLink(0x2db233bb72db49c3L, 0xadc47ae97f87f8dcL, 0x62a6e9940367a261L, 0x75cfba109e316b6aL, "rightArg")), MetaAdapterFactory.getConcept(0x2db233bb72db49c3L, 0xadc47ae97f87f8dcL, 0x5cf68b0abfab6115L, "jetbrains.mps.vclang.structure.ImplicitArgument"))) {
          return true;
        }
        return true;
      }
      public boolean isHidden() {
        return false;
      }
      public void prettyPrint(StringBuilder builder, List<String> names, byte prec) {
        getExpression().prettyPrint(builder, names, prec);
      }
    };
  }
}
