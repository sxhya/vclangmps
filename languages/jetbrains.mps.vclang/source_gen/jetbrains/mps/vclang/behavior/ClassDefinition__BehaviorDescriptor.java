package jetbrains.mps.vclang.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBHDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.core.aspects.behaviour.api.BehaviorRegistry;
import jetbrains.mps.smodel.language.ConceptRegistry;
import jetbrains.mps.core.aspects.behaviour.api.SMethod;
import jetbrains.mps.scope.Scope;
import jetbrains.mps.core.aspects.behaviour.SMethodBuilder;
import jetbrains.mps.core.aspects.behaviour.SJavaCompoundTypeImpl;
import jetbrains.mps.core.aspects.behaviour.SModifiersImpl;
import jetbrains.mps.core.aspects.behaviour.AccessPrivileges;
import org.jetbrains.mps.openapi.model.SNode;
import java.util.List;
import com.jetbrains.jetpad.vclang.term.Abstract;
import java.util.Arrays;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import java.util.ArrayList;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.internal.collections.runtime.Sequence;
import java.util.Set;
import jetbrains.mps.internal.collections.runtime.SetSequence;
import java.util.HashSet;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SModelOperations;
import java.util.Iterator;
import jetbrains.mps.lang.scopes.runtime.CompositeWithParentScope;
import jetbrains.mps.scope.ListScope;
import jetbrains.mps.lang.core.behavior.ScopeProvider__BehaviorDescriptor;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import jetbrains.mps.internal.collections.runtime.ISelector;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.core.aspects.behaviour.api.SConstructor;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.core.aspects.behaviour.api.BHMethodNotFoundException;
import org.jetbrains.mps.openapi.persistence.PersistenceFacade;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.smodel.SReference;

public final class ClassDefinition__BehaviorDescriptor extends BaseBHDescriptor {
  private static final SAbstractConcept CONCEPT = MetaAdapterFactory.getConcept(0x2db233bb72db49c3L, 0xadc47ae97f87f8dcL, 0xfc408c778ec305aL, "jetbrains.mps.vclang.structure.ClassDefinition");
  private static final BehaviorRegistry REGISTRY = ConceptRegistry.getInstance().getBehaviorRegistry();

  public static final SMethod<Scope> getScope_id3fifI_xCJOQ = new SMethodBuilder<Scope>(new SJavaCompoundTypeImpl(Scope.class)).name("getScope").modifiers(SModifiersImpl.create(8, AccessPrivileges.PUBLIC)).concept(CONCEPT).id("3fifI_xCJOQ").registry(REGISTRY).build(SMethodBuilder.createJavaParameter((Class<SNode>) ((Class) Object.class), ""), SMethodBuilder.createJavaParameter((Class<SNode>) ((Class) Object.class), ""));
  public static final SMethod<List<SNode>> getMembers_id2jcrgspE4NS = new SMethodBuilder<List<SNode>>(new SJavaCompoundTypeImpl((Class<List<SNode>>) ((Class) Object.class))).name("getMembers").modifiers(SModifiersImpl.create(0, AccessPrivileges.PUBLIC)).concept(CONCEPT).id("2jcrgspE4NS").registry(REGISTRY).build();
  public static final SMethod<List<SNode>> getStaticMembersIncludingExported_id2jcrgspEawz = new SMethodBuilder<List<SNode>>(new SJavaCompoundTypeImpl((Class<List<SNode>>) ((Class) Object.class))).name("getStaticMembersIncludingExported").modifiers(SModifiersImpl.create(0, AccessPrivileges.PUBLIC)).concept(CONCEPT).id("2jcrgspEawz").registry(REGISTRY).build();
  public static final SMethod<Abstract.Definition> toSourceDefinition_id5NQyKEZGoPp = new SMethodBuilder<Abstract.Definition>(new SJavaCompoundTypeImpl(Abstract.Definition.class)).name("toSourceDefinition").modifiers(SModifiersImpl.create(8, AccessPrivileges.PUBLIC)).concept(CONCEPT).id("5NQyKEZGoPp").registry(REGISTRY).build();
  public static final SMethod<SNode> getDefinition_id24ni4bpKruo = new SMethodBuilder<SNode>(new SJavaCompoundTypeImpl((Class<SNode>) ((Class) Object.class))).name("getDefinition").modifiers(SModifiersImpl.create(8, AccessPrivileges.PUBLIC)).concept(CONCEPT).id("24ni4bpKruo").registry(REGISTRY).build();
  public static final SMethod<Void> addArtifacts_id24ni4bq6hxj = new SMethodBuilder<Void>(new SJavaCompoundTypeImpl(Void.class)).name("addArtifacts").modifiers(SModifiersImpl.create(8, AccessPrivileges.PUBLIC)).concept(CONCEPT).id("24ni4bq6hxj").registry(REGISTRY).build(SMethodBuilder.createJavaParameter((Class<List<SNode>>) ((Class) Object.class), ""));
  public static final SMethod<String> getNamespaceName_id3wdrnIK3K7o = new SMethodBuilder<String>(new SJavaCompoundTypeImpl(String.class)).name("getNamespaceName").modifiers(SModifiersImpl.create(8, AccessPrivileges.PUBLIC)).concept(CONCEPT).id("3wdrnIK3K7o").registry(REGISTRY).build();
  public static final SMethod<Abstract.Statement> toSourceStatement_id3wdrnIK4lOW = new SMethodBuilder<Abstract.Statement>(new SJavaCompoundTypeImpl(Abstract.Statement.class)).name("toSourceStatement").modifiers(SModifiersImpl.create(8, AccessPrivileges.PUBLIC)).concept(CONCEPT).id("3wdrnIK4lOW").registry(REGISTRY).build();
  public static final SMethod<List<SNode>> getDependencies_id5LKdqeczslD = new SMethodBuilder<List<SNode>>(new SJavaCompoundTypeImpl((Class<List<SNode>>) ((Class) Object.class))).name("getDependencies").modifiers(SModifiersImpl.create(0, AccessPrivileges.PUBLIC)).concept(CONCEPT).id("5LKdqeczslD").registry(REGISTRY).build();

  private static final List<SMethod<?>> BH_METHODS = Arrays.<SMethod<?>>asList(getScope_id3fifI_xCJOQ, getMembers_id2jcrgspE4NS, getStaticMembersIncludingExported_id2jcrgspEawz, toSourceDefinition_id5NQyKEZGoPp, getDefinition_id24ni4bpKruo, addArtifacts_id24ni4bq6hxj, getNamespaceName_id3wdrnIK3K7o, toSourceStatement_id3wdrnIK4lOW, getDependencies_id5LKdqeczslD);

  private static void ___init___(@NotNull SNode __thisNode__) {
  }

  /*package*/ static Scope getScope_id3fifI_xCJOQ(@NotNull SNode __thisNode__, SNode kind, SNode child) {
    if (SConceptOperations.isSubConceptOf(SNodeOperations.asSConcept(kind), MetaAdapterFactory.getConcept(0x2db233bb72db49c3L, 0xadc47ae97f87f8dcL, 0xfc408c778ec7ec8L, "jetbrains.mps.vclang.structure.Definition")) && SNodeOperations.hasRole(child, MetaAdapterFactory.getContainmentLink(0x2db233bb72db49c3L, 0xadc47ae97f87f8dcL, 0xfc408c778ec305aL, 0xfc408c778ec7ec9L, "statements"))) {
      List<SNode> prevDefs = new ArrayList<SNode>();
      ListSequence.fromList(prevDefs).addElement(SNodeOperations.cast(child, MetaAdapterFactory.getInterfaceConcept(0x2db233bb72db49c3L, 0xadc47ae97f87f8dcL, 0x37ebde1aa3d5f034L, "jetbrains.mps.vclang.structure.IClassMember")));
      ListSequence.fromList(prevDefs).addSequence(Sequence.fromIterable(SNodeOperations.ofConcept(SNodeOperations.getPrevSiblings(child, false), MetaAdapterFactory.getInterfaceConcept(0x2db233bb72db49c3L, 0xadc47ae97f87f8dcL, 0x37ebde1aa3d5f034L, "jetbrains.mps.vclang.structure.IClassMember"))));
      List<SNode> result = new ArrayList<SNode>();
      Set<SNode> importedClasses = SetSequence.fromSet(new HashSet<SNode>());
      SetSequence.fromSet(importedClasses).addElement(SNodeOperations.cast(SLinkOperations.getTarget(_quotation_createNode_69yrar_a0a0a5a0a0(), MetaAdapterFactory.getReferenceLink(0x2db233bb72db49c3L, 0xadc47ae97f87f8dcL, 0x5c7035a38c5ef32eL, 0x5c7035a38c5ef32fL, "ref")), MetaAdapterFactory.getConcept(0x2db233bb72db49c3L, 0xadc47ae97f87f8dcL, 0xfc408c778ec305aL, "jetbrains.mps.vclang.structure.ClassDefinition")));
      Set<SNode> externalClasses = SetSequence.fromSet(new HashSet<SNode>());
      SetSequence.fromSet(externalClasses).addSequence(ListSequence.fromList(SModelOperations.rootsIncludingImported(SNodeOperations.getModel(child), MetaAdapterFactory.getConcept(0x2db233bb72db49c3L, 0xadc47ae97f87f8dcL, 0xfc408c778ec305aL, "jetbrains.mps.vclang.structure.ClassDefinition"))));
      for (SNode def : ListSequence.fromList(prevDefs)) {
        SNode definition = IClassMember__BehaviorDescriptor.getDefinition_id24ni4bpKruo.invoke(def);
        if ((definition != null) && !(SNodeOperations.getConcept(definition).isAbstract())) {
          Definition__BehaviorDescriptor.addArtifacts_id24ni4bq6hxj.invoke(definition, result);
        }
        if (SNodeOperations.isInstanceOf(def, MetaAdapterFactory.getConcept(0x2db233bb72db49c3L, 0xadc47ae97f87f8dcL, 0x37ebde1aa3d4fe7cL, "jetbrains.mps.vclang.structure.OpenScopeCommand"))) {
          SetSequence.fromSet(importedClasses).addElement(SLinkOperations.getTarget(SNodeOperations.cast(def, MetaAdapterFactory.getConcept(0x2db233bb72db49c3L, 0xadc47ae97f87f8dcL, 0x37ebde1aa3d4fe7cL, "jetbrains.mps.vclang.structure.OpenScopeCommand")), MetaAdapterFactory.getReferenceLink(0x2db233bb72db49c3L, 0xadc47ae97f87f8dcL, 0x37ebde1aa3d4fe7fL, 0x37ebde1aa3d50122L, "classifier")));
        } else if (SNodeOperations.isInstanceOf(def, MetaAdapterFactory.getConcept(0x2db233bb72db49c3L, 0xadc47ae97f87f8dcL, 0x37ebde1aa3d4fe80L, "jetbrains.mps.vclang.structure.CloseScopeCommand"))) {
          SetSequence.fromSet(importedClasses).removeElement(SLinkOperations.getTarget(SNodeOperations.cast(def, MetaAdapterFactory.getConcept(0x2db233bb72db49c3L, 0xadc47ae97f87f8dcL, 0x37ebde1aa3d4fe80L, "jetbrains.mps.vclang.structure.CloseScopeCommand")), MetaAdapterFactory.getReferenceLink(0x2db233bb72db49c3L, 0xadc47ae97f87f8dcL, 0x37ebde1aa3d4fe7fL, 0x37ebde1aa3d50122L, "classifier")));
        }
      }
      {
        Iterator<SNode> importedClass_it = SetSequence.fromSet(importedClasses).iterator();
        SNode importedClass_var;
        while (importedClass_it.hasNext()) {
          importedClass_var = importedClass_it.next();
          ListSequence.fromList(result).addSequence(ListSequence.fromList(ClassDefinition__BehaviorDescriptor.getStaticMembersIncludingExported_id2jcrgspEawz.invoke(importedClass_var)));
        }
      }
      ListSequence.fromList(result).addSequence(SetSequence.fromSet(externalClasses));
      return new VcNameHidingScope(CompositeWithParentScope.parentScope(__thisNode__, kind), ListScope.forNamedElements(result));
    }
    return ((Scope) ScopeProvider__BehaviorDescriptor.getScope_id3fifI_xCJOQ.invokeSpecial(__thisNode__, kind, child));
  }
  /*package*/ static List<SNode> getMembers_id2jcrgspE4NS(@NotNull SNode __thisNode__) {
    List<SNode> result = new ArrayList<SNode>();
    {
      Iterator<SNode> def_it = ListSequence.fromList(SLinkOperations.getChildren(__thisNode__, MetaAdapterFactory.getContainmentLink(0x2db233bb72db49c3L, 0xadc47ae97f87f8dcL, 0xfc408c778ec305aL, 0xfc408c778ec7ec9L, "statements"))).iterator();
      SNode def_var;
      while (def_it.hasNext()) {
        def_var = def_it.next();
        SNode def1 = IClassMember__BehaviorDescriptor.getDefinition_id24ni4bpKruo.invoke(def_var);
        if ((def1 != null) && SNodeOperations.isInstanceOf(def_var, MetaAdapterFactory.getConcept(0x2db233bb72db49c3L, 0xadc47ae97f87f8dcL, 0x7b3886e81fa1cdbeL, "jetbrains.mps.vclang.structure.StaticModifier"))) {
          Definition__BehaviorDescriptor.addArtifacts_id24ni4bq6hxj.invoke(def1, result);
        }
      }
    }
    return result;
  }
  /*package*/ static List<SNode> getStaticMembersIncludingExported_id2jcrgspEawz(@NotNull SNode __thisNode__) {
    Set<SNode> result = SetSequence.fromSet(new HashSet<SNode>());
    for (SNode classifier : ListSequence.fromList(SLinkOperations.getChildren(__thisNode__, MetaAdapterFactory.getContainmentLink(0x2db233bb72db49c3L, 0xadc47ae97f87f8dcL, 0xfc408c778ec305aL, 0xfc408c778ec7ec9L, "statements"))).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SNodeOperations.isInstanceOf(it, MetaAdapterFactory.getConcept(0x2db233bb72db49c3L, 0xadc47ae97f87f8dcL, 0x37ebde1aa3d4fe81L, "jetbrains.mps.vclang.structure.ExportScopeCommand"));
      }
    }).select(new ISelector<SNode, SNode>() {
      public SNode select(SNode it) {
        return SLinkOperations.getTarget(SNodeOperations.cast(it, MetaAdapterFactory.getConcept(0x2db233bb72db49c3L, 0xadc47ae97f87f8dcL, 0x37ebde1aa3d4fe81L, "jetbrains.mps.vclang.structure.ExportScopeCommand")), MetaAdapterFactory.getReferenceLink(0x2db233bb72db49c3L, 0xadc47ae97f87f8dcL, 0x37ebde1aa3d4fe7fL, 0x37ebde1aa3d50122L, "classifier"));
      }
    })) {
      if (classifier != null) {
        SetSequence.fromSet(result).addSequence(ListSequence.fromList(ClassDefinition__BehaviorDescriptor.getStaticMembersIncludingExported_id2jcrgspEawz.invoke(classifier)));
      }
    }
    SetSequence.fromSet(result).addSequence(ListSequence.fromList(ClassDefinition__BehaviorDescriptor.getMembers_id2jcrgspE4NS.invoke(__thisNode__)));
    return SetSequence.fromSet(result).toListSequence();
  }
  /*package*/ static Abstract.Definition toSourceDefinition_id5NQyKEZGoPp(@NotNull SNode __thisNode__) {
    return new ClassAdapter(__thisNode__);
  }
  /*package*/ static SNode getDefinition_id24ni4bpKruo(@NotNull SNode __thisNode__) {
    return __thisNode__;
  }
  /*package*/ static void addArtifacts_id24ni4bq6hxj(@NotNull SNode __thisNode__, List<SNode> artifacts) {
    ListSequence.fromList(artifacts).addElement(__thisNode__);
  }
  /*package*/ static String getNamespaceName_id3wdrnIK3K7o(@NotNull SNode __thisNode__) {
    return SPropertyOperations.getString(__thisNode__, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"));
  }
  /*package*/ static Abstract.Statement toSourceStatement_id3wdrnIK4lOW(@NotNull SNode __thisNode__) {
    return new DefineStatementAdapter(__thisNode__, false);
  }
  /*package*/ static List<SNode> getDependencies_id5LKdqeczslD(@NotNull SNode __thisNode__) {
    return ListSequence.fromList(SNodeOperations.getNodeDescendants(__thisNode__, MetaAdapterFactory.getConcept(0x2db233bb72db49c3L, 0xadc47ae97f87f8dcL, 0x37ebde1aa3d4fe7fL, "jetbrains.mps.vclang.structure.AbstractScopeCommand"), false, new SAbstractConcept[]{})).select(new ISelector<SNode, SNode>() {
      public SNode select(SNode it) {
        return SLinkOperations.getTarget(it, MetaAdapterFactory.getReferenceLink(0x2db233bb72db49c3L, 0xadc47ae97f87f8dcL, 0x37ebde1aa3d4fe7fL, 0x37ebde1aa3d50122L, "classifier"));
      }
    }).union(ListSequence.fromList(SNodeOperations.getNodeDescendants(__thisNode__, MetaAdapterFactory.getConcept(0x2db233bb72db49c3L, 0xadc47ae97f87f8dcL, 0x6168f46017301b6eL, "jetbrains.mps.vclang.structure.DotExpression"), false, new SAbstractConcept[]{})).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(it, MetaAdapterFactory.getContainmentLink(0x2db233bb72db49c3L, 0xadc47ae97f87f8dcL, 0x6168f46017301b6eL, 0x6168f46017301b72L, "leftExpression")), MetaAdapterFactory.getConcept(0x2db233bb72db49c3L, 0xadc47ae97f87f8dcL, 0x40feb6e2a72ce3afL, "jetbrains.mps.vclang.structure.DefExpression")) && SNodeOperations.isInstanceOf(SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(it, MetaAdapterFactory.getContainmentLink(0x2db233bb72db49c3L, 0xadc47ae97f87f8dcL, 0x6168f46017301b6eL, 0x6168f46017301b72L, "leftExpression")), MetaAdapterFactory.getConcept(0x2db233bb72db49c3L, 0xadc47ae97f87f8dcL, 0x40feb6e2a72ce3afL, "jetbrains.mps.vclang.structure.DefExpression")), MetaAdapterFactory.getReferenceLink(0x2db233bb72db49c3L, 0xadc47ae97f87f8dcL, 0x5c7035a38c5ef32eL, 0x5c7035a38c5ef32fL, "ref")), MetaAdapterFactory.getConcept(0x2db233bb72db49c3L, 0xadc47ae97f87f8dcL, 0xfc408c778ec305aL, "jetbrains.mps.vclang.structure.ClassDefinition"));
      }
    }).select(new ISelector<SNode, SNode>() {
      public SNode select(SNode it) {
        return SNodeOperations.cast(SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(it, MetaAdapterFactory.getContainmentLink(0x2db233bb72db49c3L, 0xadc47ae97f87f8dcL, 0x6168f46017301b6eL, 0x6168f46017301b72L, "leftExpression")), MetaAdapterFactory.getConcept(0x2db233bb72db49c3L, 0xadc47ae97f87f8dcL, 0x40feb6e2a72ce3afL, "jetbrains.mps.vclang.structure.DefExpression")), MetaAdapterFactory.getReferenceLink(0x2db233bb72db49c3L, 0xadc47ae97f87f8dcL, 0x5c7035a38c5ef32eL, 0x5c7035a38c5ef32fL, "ref")), MetaAdapterFactory.getConcept(0x2db233bb72db49c3L, 0xadc47ae97f87f8dcL, 0xfc408c778ec305aL, "jetbrains.mps.vclang.structure.ClassDefinition"));
      }
    })).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return !((SPropertyOperations.getString(it, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name")).equals("Prelude")));
      }
    }).toListSequence();
  }

  /*package*/ ClassDefinition__BehaviorDescriptor() {
    super(REGISTRY);
  }

  @Override
  protected void initNode(@NotNull SNode node, @NotNull SConstructor constructor, @Nullable Object[] parameters) {
    ___init___(node);
  }

  @Override
  protected <T> T invokeSpecial0(@NotNull SNode node, @NotNull SMethod<T> method, @Nullable Object[] parameters) {
    int methodIndex = BH_METHODS.indexOf(method);
    if (methodIndex < 0) {
      throw new BHMethodNotFoundException(this, method);
    }
    switch (methodIndex) {
      case 0:
        return (T) ((Scope) getScope_id3fifI_xCJOQ(node, (SNode) parameters[0], (SNode) parameters[1]));
      case 1:
        return (T) ((List<SNode>) getMembers_id2jcrgspE4NS(node));
      case 2:
        return (T) ((List<SNode>) getStaticMembersIncludingExported_id2jcrgspEawz(node));
      case 3:
        return (T) ((Abstract.Definition) toSourceDefinition_id5NQyKEZGoPp(node));
      case 4:
        return (T) ((SNode) getDefinition_id24ni4bpKruo(node));
      case 5:
        addArtifacts_id24ni4bq6hxj(node, (List<SNode>) parameters[0]);
        return null;
      case 6:
        return (T) ((String) getNamespaceName_id3wdrnIK3K7o(node));
      case 7:
        return (T) ((Abstract.Statement) toSourceStatement_id3wdrnIK4lOW(node));
      case 8:
        return (T) ((List<SNode>) getDependencies_id5LKdqeczslD(node));
      default:
        throw new BHMethodNotFoundException(this, method);
    }
  }

  @Override
  protected <T> T invokeSpecial0(@NotNull SAbstractConcept concept, @NotNull SMethod<T> method, @Nullable Object[] parameters) {
    int methodIndex = BH_METHODS.indexOf(method);
    if (methodIndex < 0) {
      throw new BHMethodNotFoundException(this, method);
    }
    switch (methodIndex) {
      default:
        throw new BHMethodNotFoundException(this, method);
    }
  }

  @NotNull
  @Override
  public List<SMethod<?>> getDeclaredMethods() {
    return BH_METHODS;
  }

  @NotNull
  @Override
  public SAbstractConcept getConcept() {
    return CONCEPT;
  }
  private static SNode _quotation_createNode_69yrar_a0a0a5a0a0() {
    PersistenceFacade facade = PersistenceFacade.getInstance();
    SNode quotedNode_1 = null;
    quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(MetaAdapterFactory.getConcept(0x2db233bb72db49c3L, 0xadc47ae97f87f8dcL, 0x40feb6e2a72ce3afL, "jetbrains.mps.vclang.structure.DefExpression"), null, null, false);
    quotedNode_1.setReference(MetaAdapterFactory.getReferenceLink(0x2db233bb72db49c3L, 0xadc47ae97f87f8dcL, 0x5c7035a38c5ef32eL, 0x5c7035a38c5ef32fL, "ref"), SReference.create(MetaAdapterFactory.getReferenceLink(0x2db233bb72db49c3L, 0xadc47ae97f87f8dcL, 0x5c7035a38c5ef32eL, 0x5c7035a38c5ef32fL, "ref"), quotedNode_1, facade.createModelReference("r:0ebf98e3-297c-49df-8487-4b820588cd91(jetbrains.mps.vclang.prelude)"), facade.createNodeId("2183713401990010815")));
    return quotedNode_1;
  }
}
