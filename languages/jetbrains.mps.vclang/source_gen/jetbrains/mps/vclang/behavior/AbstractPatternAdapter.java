package jetbrains.mps.vclang.behavior;

/*Generated by MPS */

import com.jetbrains.jetpad.vclang.term.Abstract;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import java.util.List;
import com.jetbrains.jetpad.vclang.term.pattern.Utils;

public class AbstractPatternAdapter implements Abstract.Pattern {
  protected SNode thisNode;
  private boolean isImplicit = false;

  public AbstractPatternAdapter(SNode t) {
    thisNode = t;
  }

  public boolean getExplicit() {
    boolean explicit = true;
    SNode t = thisNode;
    while (SNodeOperations.isInstanceOf(t, MetaAdapterFactory.getInterfaceConcept(0x2db233bb72db49c3L, 0xadc47ae97f87f8dcL, 0x1e1ef882fa2fd10aL, "jetbrains.mps.vclang.structure.IPattern"))) {
      if (SNodeOperations.isInstanceOf(t, MetaAdapterFactory.getConcept(0x2db233bb72db49c3L, 0xadc47ae97f87f8dcL, 0x61f824a8086f83a9L, "jetbrains.mps.vclang.structure.PatternParenthesis"))) {
        if (SPropertyOperations.hasValue(SNodeOperations.cast(t, MetaAdapterFactory.getConcept(0x2db233bb72db49c3L, 0xadc47ae97f87f8dcL, 0x61f824a8086f83a9L, "jetbrains.mps.vclang.structure.PatternParenthesis")), MetaAdapterFactory.getProperty(0x2db233bb72db49c3L, 0xadc47ae97f87f8dcL, 0x61f824a8086fa9f4L, 0x61f824a80875f0c9L, "type"), "true", "false")) {
          explicit = false;
          break;
        }
      }
      t = SNodeOperations.getParent(t);
    }
    return explicit;
  }

  public void prettyPrint(StringBuilder builder, List<String> names, byte b) {
    Utils.prettyPrintPattern(this, builder, names);
  }
}
